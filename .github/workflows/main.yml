name: CI/CD Development Env

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  REGISTRY: ghcr.io
  REGISTRY_USERNAME: ${{ github.actor }}
  REGISTRY_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
  IMAGE_NAME: ${{ github.repository }}
  WORKER_IMAGE_NAME: ${{ github.repository }}-worker
  DOCKER_CONTAINER_NAME: socious-id
  DOCKER_CONTAINER_NETWORK: sociousid_default
  CONFIG_DIR_NAME: socious-id

jobs:

  test-build:
    name: Test & Build
    if: github.ref == 'refs/heads/main'
    runs-on: ["socious-id-dev"]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - id: go-cache-paths
        run: |
          echo "::set-output name=go-build::$(go env GOCACHE)"
          echo "::set-output name=go-mod::$(go env GOMODCACHE)"

      # Cache go build cache, used to speedup go test
      - name: Go Build Cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.go-cache-paths.outputs.go-build }}
          key: ${{ runner.os }}-go-build-${{ hashFiles('**/go.sum') }}

      # Cache go mod cache, used to speedup builds
      - name: Go Mod Cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.go-cache-paths.outputs.go-mod }}
          key: ${{ runner.os }}-go-mod-${{ hashFiles('**/go.sum') }}

      - name: Setup Go environment
        uses: actions/setup-go@v5.0.2
        with:
          go-version: '1.22.5'

      - name: Copying build & test environment
        run: |
          cp /etc/${{ env.CONFIG_DIR_NAME }}/config.yml .
          cp /etc/${{ env.CONFIG_DIR_NAME }}/test.config.yml .
          cp /etc/${{ env.CONFIG_DIR_NAME }}/gcs-service-account.json .

      - name: Downloading dependencies
        run: |
          go mod download 

      - name: Running tests
        run: |
          go test -v ./tests

      # - name: Run DB migrations
      #   if: github.event_name != 'pull_request'
      #   run: |
      #     go run cmd/migrate/main.go up

      - name: Docker Setup Buildx
        uses: docker/setup-buildx-action@v3.6.1

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3.2.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.REGISTRY_USERNAME }}
          password: ${{ env.REGISTRY_PASSWORD }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5.5.1
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v6.7.0
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Extract Worker Docker metadata
        id: meta-worker
        uses: docker/metadata-action@v5.5.1
        with:
          images: ${{ env.REGISTRY }}/${{ env.WORKER_IMAGE_NAME }}

      - name: Build and push Worker Docker image
        id: build-and-push-worker
        uses: docker/build-push-action@v6.7.0
        with:
          context: .
          file: "./Worker.Dockerfile"
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta-worker.outputs.tags }}
          labels: ${{ steps.meta-worker.outputs.labels }}

  deploy:
    needs: [test-build]
    name: Deploy
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ["socious-id-dev"]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3.2.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5.5.1
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Docker run
        run: |
          docker pull ${{ steps.meta.outputs.tags }}
          docker ps -qa --filter "name=${{ env.DOCKER_CONTAINER_NAME }}" | grep -q . && docker stop ${{ env.DOCKER_CONTAINER_NAME }} && docker rm -fv ${{ env.DOCKER_CONTAINER_NAME }}
          docker run -d --restart always -p 5064:5064 -h ${{ env.DOCKER_CONTAINER_NAME }} --network ${{ env.DOCKER_CONTAINER_NETWORK }} --name ${{ env.DOCKER_CONTAINER_NAME }} ${{ steps.meta.outputs.tags }}

      - name: Extract Docker metadata
        id: meta-worker
        uses: docker/metadata-action@v5.5.1
        with:
          images: ${{ env.REGISTRY }}/${{ env.WORKER_IMAGE_NAME }}

      - name: Docker run worker
        run: |
          docker pull ${{ steps.meta-worker.outputs.tags }}
          docker ps -qa --filter "name=${{ env.DOCKER_CONTAINER_NAME }}-worker" | grep -q . && docker stop ${{ env.DOCKER_CONTAINER_NAME }}-worker && docker rm -fv ${{ env.DOCKER_CONTAINER_NAME }}-worker
          docker run -d --restart always -h ${{ env.DOCKER_CONTAINER_NAME }}-worker --network ${{ env.DOCKER_CONTAINER_NETWORK }} --name ${{ env.DOCKER_CONTAINER_NAME }}-worker ${{ steps.meta-worker.outputs.tags }}